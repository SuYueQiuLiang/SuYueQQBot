package org.suyue.LezzBot;

import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;

import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Random;

public class GenerateClass {
    final private static Random random = new Random();
    final private static DecimalFormat decimalFormat1 = new DecimalFormat("0.0000000000000000");
    final private static DecimalFormat decimalFormat2 = new DecimalFormat("0.000000000000000");
    private static final double CALORIE_PER_MILEAGE = 58.3;
    final private static String pointNode = "30.825271789266598:106.12014159160996:30.82545144680897:106.1202381511345:30.8255850380969:106.12030252415086:30.825737055543303:106.1203454394951:30.825856826695183:106.1203454394951:30.82593974509749:106.12028106647874:30.82599963056575:106.12018987137223:30.826027270000015:106.12010404068376:30.82604569628507:106.11996993023301:30.825990417419266:106.11979826885606:30.825879859592185:106.11968561607743:30.82578312138906:106.11961051422502:30.8256587435561:106.11953004795457:30.825538972157357:106.11944958168412:30.8254284138105:106.11933156448747:30.82529021569786:106.1192832847252:30.825184263676842:106.11923500496293:30.82504606521284:106.11922427612687:30.824921686425057:106.11925646263505:30.82483876714377:106.11933156448747:30.82477888095159:106.11945494610215:30.824760454423387:106.11960514980699:30.824801914106878:106.11972853142167:30.824866406912275:106.11983581978227:30.824963146039234:106.11991092163468:30.82505067183188:106.11996993023301:30.82516123061379:106.12006648975755:30.825267182660404:106.12012549835588:30.825377741193137:106.1201845069542:30.82546987320649:106.12022742229844:30.82558503809891:106.1202917953148:30.82570020285319:106.12034007507707:30.82585682669717:106.12035616833116:30.82588907275101:106.12028106647874:30.825912105639944:106.12022205788041:30.825962777976144:106.12010940510179:30.825976597699615:106.11994310814286:30.82593513852341:106.11981436211015:30.825783121390838:106.11970170933152:30.8256495303787:106.11957832771684:30.82554357875416:106.11950859028245:30.82545605341089:106.11946031052018:30.825354708176977:106.11936375099565:30.825202690125458:106.11925109821702:30.825073704923255:106.1192296405449:30.82493550630002:106.1192832847252:30.824815733999092:106.11941739517594:30.82480191410861:106.1195890565529:30.824820340628847:106.11972853142167:30.82488483342185:106.1198411842003:30.824990785773362:106.11992165047074:30.82517044384157:106.12002357441331:30.825285609092987:106.12009867626573:30.825409987409515:106.12017914253617:30.825603464470404:106.12029715973283:30.82572323578897:106.12032398182298:30.825815367470813:106.12028643089677:30.82592131879564:106.12021669346238:30.82597659770132:106.12009867626573:30.82598120427535:106.11986264187242:30.825925925372395:106.11976071792985:30.82581536747104:106.11968561607743:30.82570941602955:106.11962124306108:30.82558043150806:106.11950859028245:30.825451446813396:106.11942275959397:30.82529021570132:106.1193744798317:30.825175050455552:106.11931010681535:30.82507831154235:106.11927255588914:30.8249769659097:106.11925646263505:30.82486640691568:106.1193369289055:30.824815734000875:106.11952468353654:30.824824947260105:106.1196802516594:30.824880226797006:106.11978754002:30.825036851978698:106.11990019279862:30.825165837230493:106.12000748115922:30.82534549497113:106.12014159160996:30.82548369300441:106.12021669346238:30.825621890838814:106.12027033764268:30.825833793798463:106.12028643089677:30.825916712220742:106.12017914253617:30.825967384554605:106.12002357441331:30.825898285911055:106.11978217560197:30.825737055549205:106.1196802516594:30.825557398541648:106.11958369213487:30.82543302041631:106.11949786144639:30.825304035523562:106.11937984424974:30.825165837231893:106.11929937797929:30.825041458599344:106.11926719147111:30.824944719551564:106.11928864914323:30.82488022679889:106.1193744798317:30.82480652074274:106.11955150562669:30.82480652074274:106.11964806515122:30.82487101354503:106.11981436211015:30.824981572533904:106.11992701488877:30.825133590935692:106.12001284557725:30.825281002489543:106.1200933118477:30.825391561006423:106.12016841370011:30.825529758973392:106.12027033764268:30.825658743563046:106.12030788856889:30.825787727979474:106.12031325298692:30.82587525302057:106.12025960880662:30.825944351680835:106.12015768486405:30.82597659770529:106.11999675232316:30.825921318799686:106.11979290443803:30.825760088476663:106.11965342956925:30.825644923794467:106.11957832771684:30.825515939186364:106.11950322586442:30.825377741199752:106.11940666633988:30.825230329794802:106.11930474239732:30.825092131397135:106.11923500496293:30.82498157253566:106.11926719147111:30.824889440053948:106.11934229332353:30.82480652074475:106.1194817681923:30.824806520744776:106.11960514980699:30.824875620174176:106.11978217560197:30.824995392400677:106.11990019279862:30.825142804166603:106.11999675232316:30.825308642132732:106.12012549835588:30.825428413819047:106.12021669346238:30.82553897216616:106.12028643089677:30.825723235795103:106.12034007507707:30.82583379380261:106.12031861740495:30.825912105647603:106.12022205788041:30.82594895825848:106.12004503208543:30.825958171409034:106.11986264187242:30.825889072758848:106.11975535351182:30.825764695063164:106.11965879398728:30.825644923796553:106.11955687004472:30.825497512801796:106.11944958168412:30.82533167516207:106.11939593750382:30.825179657073985:106.11931010681535:30.825078311548225:106.11924573379899:30.82493550630778:106.11924036938096:30.824866406921586:106.11933156448747:30.824815734006805:106.11946031052018:30.824847980410276:106.11967488724137:30.82492168643465:106.11986264187242:30.825013818885573:106.11995920139695:30.825128984324973:106.12001820999528:30.825225723187234:106.12007721859361:30.825377741202576:106.12016304928208:30.82551133259302:106.1202381511345:30.825640317207508:106.12029715973283:30.82574626872554:106.12032398182298:30.825824580641928:106.12030252415086:30.825921318803402:106.12022205788041:30.825971991134843:106.12010404068376:30.825985810856988:106.11996993023301:30.8259351385329:106.11980363327409:30.825792334566763:106.11963733631517:30.825612677662562:106.11952468353654:30.825423807221277:106.11946031052018:30.825271789279167:106.11934765774156:30.82517505046339:106.1192832847252:30.825055278461384:106.11919745403672:30.82493550630979:106.11925109821702:30.82485258704049:106.11936911541368:30.82481573400889:106.11954614120866:30.824811127378933:106.11965879398728:30.824912473186767:106.1198411842003:30.82508752478481:106.11996993023301:30.825207296746942:106.12005576092149:30.82541920062157:106.12018987137223:30.825543578764975:106.12029715973283:30.82561267766391:106.12032398182298:30.82575548189754:106.12035080391313:30.82584761354837:106.12030252415086:30.82590289249651:106.12023278671647:30.825967384562468:106.12012013393785:30.825999630579158:106.11996993023301:30.825916712228683:106.11981436211015:30.82581536748099:106.11971780258561:30.825700202865125:106.1196266074791:30.825525152384476:106.11949249702836:30.82538234780854:106.11937984424974:30.825216509970016:106.11927792030717:30.82509213140309:106.11924036938096:30.82498157254174:106.11925646263505:30.824898653312236:106.11930474239732:30.824824947270283:106.119428124012:30.824806520750933:106.11956223446275:30.82483416052862:106.11972853142167:30.824958539429886:106.11986264187242:30.825055278463978:106.11994310814286:30.825184263691167:106.1200396676674:30.82536392139743:106.12016304928208";
    public static String getRunningDetail(String semesterId,String limitationsGoalsSexInfoId,double validMileage){
        Random random = new Random(System.currentTimeMillis());
        //随机偏移一定的跑步路程避免整数
        double offset = random.nextDouble() / 100;
        double totMileage = validMileage + 0.5;
        if (totMileage >= 3.5) {
            totMileage -= offset;
            validMileage -= offset;
        } else {
            totMileage += offset;
            validMileage += offset;
        }
        DecimalFormat df = new DecimalFormat("#.00");
        validMileage = Double.parseDouble(df.format(validMileage));
        JSONObject content = new JSONObject();
        content.put("scoringType", 1);
        content.put("semesterId", semesterId);
        content.put("effectiveMileage", validMileage);
        content.put("totalMileage", totMileage);
        content.put("deviceType", "MI8");
        content.put("gpsMileage",totMileage);
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        long time = System.currentTimeMillis(),time2 = time-((random.nextInt(10)+15)*60*1000);
        Date date1 = new Date(time2);
        Date date2 = new Date(time);
        content.put("startTime",simpleDateFormat.format(date1));
        content.put("endTime",simpleDateFormat.format(date2));
        int calorie = (int) (totMileage * CALORIE_PER_MILEAGE);
        int keeptime = (int) (date2.getTime() - date1.getTime()) / 1000;
        content.put("keepTime", keeptime);
        content.put("calorie", calorie);
        content.put("effectivePart", 1);
        content.put("limitationsGoalsSexInfoId", limitationsGoalsSexInfoId);
        content.put("systemVersion", "11.0.1");
        content.put("signPoint", new JSONArray());
        content.put("routineLine", "routineLineInsertStringForReplace");
        int avePace = ((int)((date2.getTime()-date1.getTime())/1000/totMileage))*1000;
        content.put("avePace",avePace);
        content.put("totalPart", 1);
        double pace = 0.5 + random.nextInt(6) / 10.0;
        int paceNumber = (int)(totMileage*1000/pace/2);
        content.put("paceNumber",paceNumber);
        content.put("paceRange", pace);
        content.put("type", "自由跑");
        content.put("uneffectiveReason","");
        content.put("signDigital",Encrypter.getSha1(validMileage
                + "1"
                + simpleDateFormat.format(date1)
                + calorie
                + avePace
                + keeptime
                + paceNumber
                + totMileage
                + "1" + Encrypter.run_salt));
        System.out.println(validMileage);
        return content.toString();
    }
//    {
//        "scoringType": 1,
//            "semesterId": "8a9780647ef79db8017f006a4e700047",
//            "signDigital": "ee160eb4867e9119075bff18245b2c5fc79f9823",
//            "effectiveMileage": 2.99,
//            "totalMileage": 3.101205825805664,
//            "deviceType": "DUK-AL20",
//            "gpsMileage": 3.101205825805664,
//            "startTime": "2022-03-27 13:56:46",
//            "endTime": "2022-03-27 14:16:08",
//            "keepTime": 1162,
//            "calorie": 180,
//            "effectivePart": 1,
//            "limitationsGoalsSexInfoId": "402888da7c3a16bb017c3a172da40198",
//            "systemVersion": "6.0.1",
//            "signPoint": [],
//        "routineLine": [],
//        "avePace": 374000,
//            "totalPart": 1,
//            "paceNumber": 1550,
//            "paceRange": 1.0,
//            "type": "自由跑",
//            "uneffectiveReason": ""
//    }

}
